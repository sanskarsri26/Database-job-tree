import sqlite3

# Connect to (or create) the SQLite database
conn = sqlite3.connect("/Users/sanskarsrivastava/Desktop/CSE/Database-job/soil_data.db")
cursor = conn.cursor()

# Create the table (if it doesn't exist already)
cursor.execute(
    """
    CREATE TABLE IF NOT EXISTS soil_data (
        "Site" TEXT,
        "Parcela_Site" TEXT,
        "fecha" TEXT,
        "Miniplot" TEXT,
        "Cámara" TEXT,
        "Archivo Licor" TEXT,
        "hora_cerrar_oruga" TEXT,
        "hora_abrir_oruga" TEXT,
        "temperature_ambiente" REAL,
        "presion_atmosferica_kpa" REAL,
        "temperature_suelo" REAL,
        "Humedad" REAL,
        "pH1" REAL,
        "pH2" REAL,
        "pH3" REAL,
        "pH4" REAL,
        "pH5" REAL,
        "Altura_de_cámara_1" REAL,
        "Altura_de_cámara_2" REAL, 
        "Altura_de_cámara_3" REAL, 
        "Altura_de_cámara_4" REAL,
        "Promedio_de_altura_de_cámara" REAL,  
        "Nivel_de_agua_en_el_suelo" REAL,
        "Camara_flotante" TEXT,
        "Altura_de_la_camara_flotante" REAL,       
        "notas" TEXT
    )
"""
)

# Insert the data into the table
cursor.execute(
    '''
    INSERT INTO soil_data (
        "Site", "Parcela_Site", "fecha", "Miniplot", "Cámara", 
        "Archivo Licor", "hora_cerrar_oruga", "hora_abrir_oruga", 
        "temperature_ambiente", "presion_atmosferica_kpa", 
        "temperature_suelo", "Humedad", "pH1", "pH2", "pH3", 
        "pH4", "pH5", "Altura_de_cámara_1", "Altura_de_cámara_2", 
        "Altura_de_cámara_3", "Altura_de_cámara_4", 
        "Promedio_de_altura_de_cámara", "Nivel_de_agua_en_el_suelo", 
        "Camara_flotante", "Altura_de_la_camara_flotante", "notas")
        VALUES
               
        ('QUI', 'QUI-02N', '2024-07-06', '29', 'A1', '29-A', '10:10:00', '10:16:00', '25', '100.9', '23.5', '', '4.7', '4', '4.5', '4.6', '', '5.1', '6.5', '5.1', '5', '', '5.3', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '29', 'B2', '29-B', '10:19:35', '10:25:35', '25', '100.9', '23.5', '', '4.7', '4', '4.5', '4.6', '', '5.1', '6.5', '5.1', '5', '', '5.3', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '32', 'A1', '32-A', '11:13:40', '11:19:40', '23.8', '101.3', '23.7', '', '3.9', '4.1', '4.1', '4.2', '', '6.5', '6.6', '5', '7.7', '', '-35', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '32', 'B2', '32-B', '11:23:51', '11:29:57', '23.8', '101.3', '23.7', '', '3.9', '4.1', '4.1', '4.2', '', '6.5', '6.6', '5', '7.7', '', '-35', 'NO', '', ''),     
        ('QUI', 'QUI-02N', '2024-07-06', '33', 'A1', '33-A', '11:40:21', '11:47:01', '24', '101.35', '23.4', '', '4.4', '4.7', '4.4', '4.2', '', '5.7', '5.8', '6.3', '6.7', '', '-33.5', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '33', 'B2', '33-B', '11:48:00', '11:59:00', '24', '101.35', '23.4', '', '4.4', '4.7', '4.4', '4.2', '', '5.7', '5.8', '6.3', '6.7', '', '-33.5', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '36', 'A1', '36-A', '12:56:15', '13:02:15', '23.9', '', '23.6', '', '4.3', '4.4', '4.3', '3.8', '', '6.8', '8.2', '7.7', '8', '', '3.5', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '36', 'B2', '36-B', '13:05:40', '13:11:00', '23.9', '', '23.6', '', '4.3', '4.4', '4.3', '3.8', '', '6.8', '8.2', '7.7', '8', '', '3.5', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '13C', 'A1', '13C-A', '13:13:40', '13:19:40', '25', '100.7', '24.2', '', '4', '4.2', '4', '4', '', '5.5', '5.4', '4', '5.5', '', '-27.6', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '13C', 'B2', '13C-B', '13:21:00', '13:27:00', '25', '100.7', '24.2', '', '4', '4.2', '4', '4', '', '5.5', '5.4', '4', '5.5', '', '-27.6', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '35', 'A1', '35-A', '13:32:35', '13:35:39', '24', '100.56', '23.6', '', '4.6', '4.2', '4.1', '4.3', '', '5', '4.5', '4.3', '4.6', '', '-4.8', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '35', 'B2', '35-B', '13:41:07', '13:47:05', '24', '100.56', '23.6', '', '4.6', '4.2', '4.1', '4.3', '', '5', '4.5', '4.3', '4.6', '', '-4.8', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '16C', 'A1', '16C-A', '13:50:00', '13:56:00', '24.2', '100.56', '23.4', '', '4.7', '4.6', '4.6', '4.5', '', '7', '6.4', '6.5', '7.5', '', '7.1', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '16C', 'B2', '16C-B', '13:58:49', '14:04:50', '24.2', '100.56', '23.4', '', '4.7', '4.6', '4.6', '4.5', '', '7', '6.4', '6.5', '7.5', '', '7.1', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '7C', 'A1', '7C-A', '14:52:46', '14:58:46', '24.5', '100.49', '23.7', '', '3.8', '4', '4', '4.4', '', '6.4', '8.2', '4.8', '7.7', '', '-5', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '7C', 'B2', '7C-B', '15:00:40', '15:06:10', '24.5', '100.49', '23.7', '', '3.8', '4', '4', '4.4', '', '6.4', '8.2', '4.8', '7.7', '', '-5', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '7D', 'A1', '7D-A', '15:11:14', '15:17:46', '25.3', '100.48', '23.6', '', '4.9', '4.8', '4.8', '5', '', '9.6', '9.7', '9', '9', '', '10.9', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-07-06', '7D', 'B2', '7D-B', '15:20:55', '15:26:55', '25.3', '100.48', '23.6', '', '4.9', '4.8', '4.8', '5', '', '9.6', '9.7', '9', '9', '', '10.9', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '1B', 'A1', '1B-A', '9:32:39', '9:40:07', '26.1', '101.02', '25.8', '', '5.2', '5.2', '5.1', '5.2', '', '', '', '', '', '', '2.6', 'Y', '15', '1 meter away from 1A, it had to be relocated because it was in the pathway'),
        ('QUI', 'QUI-02N', '2024-08-06', '1B', 'B2', '1B-B', '9:47:17', '9:52:41', '26.1', '101.02', '25.8', '', '5.2', '5.2', '5.1', '5.2', '', '', '', '', '', '', '2.6', 'Y', '15', '1 meter away from 1A, it had to be relocated because it was in the pathway'),
        ('QUI', 'QUI-02N', '2024-08-06', '1A2', 'A1', '1A2-A', '9:58:00', '10:03:32', '25.4', '101.02', '25.5', '', '5', '5.1', '5.1', '5.2', '', '', '', '', '', '', '5.8', 'Y', '15', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '1A2', 'B2', '1A2-B', '10:04:30', '10:10:15', '25.4', '101.02', '25.5', '', '5', '5.1', '5.1', '5.2', '', '', '', '', '', '', '5.8', 'Y', '15', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '1A', 'A1', '1A-A', '10:17:58', '10:24:10', '25.4', '101.02', '25.5', '', '5', '5.1', '5.1', '5.2', '', '', '', '', '', '', '5.8', 'Y', '15', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '1A', 'B2', '1A-B', '10:25:20', '10:32:05', '25.4', '101.02', '25.5', '', '5', '5.1', '5.1', '5.2', '', '', '', '', '', '', '5.8', 'Y', '15', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '4A', 'A1', '4A-A', '10:56:40', '11:01:40', '25.4', '101.1', '25.4', '', '5.1', '5', '4.7', '4.8', '', '4.9', '4.6', '4.9', '4.2', '', '5.2', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '4A', 'B2', '4A-B', '11:03:10', '11:08:10', '25.4', '101.1', '25.4', '', '5.1', '5', '4.7', '4.8', '', '4.9', '4.6', '4.9', '4.2', '', '5.2', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '7A', 'A1', '7A-A', '11:12:20', '11:17:20', '26.1', '101.1', '25.6', '', '5', '5', '5.2', '4.4', '', '5', '5', '4', '3.8', '', '3.8', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '7A', 'B2', '7A-B', '11:19:10', '11:24:10', '26.1', '101.1', '25.6', '', '5', '5', '5.2', '4.4', '', '5', '5', '4', '3.8', '', '3.8', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '10A', 'A1', '10A-A', '11:35:10', '11:40:10', '26.1', '101.1', '26.2', '', '5.1', '5.2', '5.2', '5.2', '', '4.8', '4.8', '3.8', '3.5', '', '4.6', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '10A', 'B2', '10A-B', '11:41:20', '11:46:20', '26.1', '101.1', '26.2', '', '5.1', '5.2', '5.2', '5.2', '', '4.8', '4.8', '3.8', '3.5', '', '4.6', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '13A', 'A1', '13A-A', '11:48:40', '11:53:40', '', '101.1', '26.5', '', '4.7', '4.9', '5.3', '5', '', '4', '3', '3.5', '4.5', '', '4.6', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '13A', 'B2', '13A-B', '11:55:40', '12:00:40', '', '101.1', '26.5', '', '4.7', '4.9', '5.3', '5', '', '4', '3', '3.5', '4.5', '', '4.6', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '16A', 'A1', '16A-A', '12:05:00', '12:10:00', '', '101.1', '26.4', '', '5', '5', '4.9', '4.7', '', '4', '4.9', '3.9', '4.8', '', '2.4', 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '16A', 'B2', '16A-B', '12:12:10', '12:17:10', '', '101.1', '26.4', '', '5', '5', '4.9', '4.7', '', '4', '4.9', '3.9', '4.8', '', '2.4', 'NO', '', ''),  
        ('QUI', 'QUI-02N', '2024-08-06', '19A', 'A1', '19A-A', '12:22:10', '12:25:18', '', '101.1', '26.8', '', '5.1', '5', '5', '5', '','', '', '', '', '', '9.5', 'Y', '14', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '19A', 'B2', '19A-B', '12:29:00', '12:34:00', '', '101.1', '26.8', '', '5.1', '5', '5', '5', '', '', '', '', '', '', '9.5', 'Y', '14', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '22A', 'A1', '22A-A', '12:37:50', '12:41:46', '', '101.1', '26.6', '', '4.9', '4.9', '5', '5', '', '', '', '', '', '', '8.6', 'Y', '14', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '22A', 'B2', '22A-B', '12:44:50', '12:49:50', '', '101.1', '26.6', '', '4.9', '4.9', '5', '5', '', '', '', '', '', '', '8.6', 'Y', '14', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '25A', 'A1', '25A-A', '13:02:50', '13:07:50', '', '101.1', '26.4', '', '5', '4', '5', '5.9', '', '', '', '', '', '', '6.9', 'Y', '14', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '25A', 'B2', '25A-B', '13:09:10', '13:14:10', '', '101.1', '26.4', '', '5', '4', '5', '5.9', '', '', '', '', '', '', '6.9', 'Y', '14', ''),
        ('QUI', 'QUI-02N', '2024-08-06', '46', 'A1', '46-A', '13:20:40', '13:25:40', '', '101.24', '26.4', '', '5', '5', '4.7', '4.8', '', '', '', '', '', '', '5.7', 'Y', '11', ''),  
        ('QUI', 'QUI-02N', '2024-08-06', '46', 'B2', '46-B', '13:27:00', '13:32:00', '', '101.24', '26.4', '', '5', '5', '4.7', '4.8', '', '', '', '', '', '', '5.7', 'Y', '11', ''),
        ('QUI', 'QUI-02N', '2024-08-06', 'N6', 'A1', 'N6-A', '13:45:00', '13:50:00', '', '101.24', '26.4', '', '5', '5', '4.7', '4.8', '', '', '', '', '', '', '5.7', 'Y', '11', ''),
        ('QUI', 'QUI-02N', '2024-08-06', 'N6', 'B2', 'N6-B', '13:51:10', '13:56:10', '', '101.24', '26.4', '', '5', '5', '4.7', '4.8', '', '', '', '', '', '', '5.7', 'Y', '11', ''),
        ('QUI', 'QUI-02N', '2024-08-06', 'N10', 'A1', 'N10-A', '13:59:50', '14:04:50', '26.9', '101.47', '27.4', '', '5.1', '5.1', '5', '5', '', '', '', '', '', '', '16', 'Y', '14', ''),
        ('QUI', 'QUI-02N', '2024-08-06', 'N10', 'B2', 'N10-B', '14:06:00', '14:11:00', '26.9', '101.47', '27.4', '', '5.1', '5.1', '5', '5', '', '', '', '', '', '', '16', 'Y', '14', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '4C', 'A1', '4C-A', '09:43:50', '09:48:30', '24.2', '100.37', '23.5', '', '5.1', '5.2', '4.9', '5.1', '5', '', '', '', '', '', '5.1', 'Y', '14.1', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '4C', 'B2', '4C-B', '09:50:20', '09:55:20', '24.2', '100.37', '23.5', '', '5.1', '5.2', '4.9', '5.1', '5', '', '', '', '', '', '5.1', 'Y', '14.1', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '7B', 'A1', '7B-A', '10:00:20', '10:05:20', '24', '100.39', '23.4', '', '5.2', '5.1', '5.1', '4.9', '4.9', '', '', '', '', '', '3.7', 'Y', '14', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '7B', 'B2', '7B-B', '10:06:50', '10:11:50', '24', '100.39', '23.4', '', '5.2', '5.1', '5.1', '4.9', '4.9', '', '', '', '', '', '3.7', 'Y', '14', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '1C', 'A1', '1C-A', '10:14:40', '10:19:40', '24.7', '100.87', '23.4', '', '5.2', '5.2', '5.2', '5.3', '5.2', '', '', '', '', '', '6.9', 'Y', '14.4', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '1C', 'B2', '1C-B', '10:21:00', '10:26:00', '24.7', '100.87', '23.4', '', '5.2', '5.2', '5.2', '5.3', '5.2', '', '', '', '', '', '6.9', 'Y', '14.4', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '44', 'A1', '44-A', '10:30:10', '10:35:10', '25.7', '101.27', '23.4', '', '5.2', '5.2', '5.2', '5.2', '5.3', '', '', '', '', '', '5.3', 'Y', '14.1', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '44', 'B2', '44-B', '10:36:40', '10:41:40', '25.7', '101.27', '23.4', '', '5.2', '5.2', '5.2', '5.2', '5.3', '', '', '', '', '', '5.3', 'Y', '14.1', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '4B', 'A1', '4B-A', '10:48:40', '10:53:40', '24.9', '101.08', '23.4', '', '5.2', '5.3', '5.2', '5.2', '5', '', '', '', '', '', '2.8', 'Y', '13.8', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '4B', 'B2', '4B-B', '10:55:00', '11:00:00', '24.9', '101.08', '23.4', '', '5.2', '5.3', '5.2', '5.2', '5', '', '', '', '', '', '2.8', 'Y', '13.8', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '30', 'A1', '30-A', '11:04:40', '11:09:40', '25', '100.83', '23.6', '', '5.3', '5.2', '5.3', '5.3', '5.3', '', '', '', '', '', '5.5', 'Y', '14.6', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '30', 'B2', '30-B', '11:11:00', '11:16:00', '25', '100.83', '23.6', '', '5.3', '5.2', '5.3', '5.3', '5.3', '', '', '', '', '', '5.5', 'Y', '14.6', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '31', 'A1', '31-A', '11:19:40', '11:24:40', '26', '100.98', '23.5', '', '5.2', '5.2', '5.3', '5.2', '5.2', '', '', '', '', '', '5.8', 'Y', '14.1', ''),
        ('QUI', 'QUI-02N', '2024-09-06', '31', 'B2', '31-B', '11:27:00', '11:32:00', '26', '100.98', '23.5', '', '5.2', '5.2', '5.3', '5.2', '5.2', '', '', '', '', '', '5.8', 'Y', '14.1', ''),
        ('QUI', 'QUI-02N', '2024-09-06', 'N2', 'A1', 'N2-A', '11:36:20', '11:41:20', 25.5, 100.92, 23.3, '', 5.1, 5.2, 5.1, 5.2, 5.1, '', '', '', '', '', 6.5, 'Y', 14.4, ''),
        ('QUI', 'QUI-02N', '2024-09-06', 'N2', 'B2', 'N2-B', '11:43:40', '11:48:40', 25.5, 100.92, 23.3, '', 5.1, 5.2, 5.1, 5.2, 5.1, '', '', '', '', '', 6.5, 'Y', 14.4, ''),
        ('QUI', 'QUI-02N', '2024-09-06', 'N1', 'A1', 'N1-A', '11:50:20', '11:55:20', 24.8, 100.79, 23.4, '', 5.1, 5.2, 5.2, 5.3, 5.3, '', '', '', '', '', 5.0, 'Y', 14.3, ''),
        ('QUI', 'QUI-02N', '2024-09-06', 'N1', 'B2', 'N1-B', '11:57:20', '12:02:20', 24.8, 100.79, 23.4, '', 5.1, 5.2, 5.2, 5.3, 5.3, '', '', '', '', '', 5.0, 'Y', 14.3, ''),
        ('QUI', 'QUI-02N', '2024-09-06', 'N3', 'A1', 'N3-A', '12:05:40', '12:10:40', 25, 100.74, 23.5, '', 5.1, 5.2, 5.2, 5.3, 5.3, '', '', '', '', '', 5.3, 'Y', 14.4, ''),
        ('QUI', 'QUI-02N', '2024-09-06', 'N3', 'B2', 'N3-B', '12:12:20', '12:16:20', 25, 100.74, 23.5, '', 5.1, 5.2, 5.2, 5.3, 5.3, '', '', '', '', '', 5.3, 'Y', 14.4, ''),
        ('QUI', 'QUI-02N', '2024-09-06', '10C', 'A1', '10C-A', '12:25:20', '12:30:20', 25, 100.92, 23.5, '', 5.2, 5.3, 5.3, 5.2, 5.3, '', '', '', '', '', 5.9, 'Y', 14.4, ''),
        ('QUI', 'QUI-02N', '2024-09-06', '10C', 'B2', '10C-B', '12:31:40', '12:36:40', 25, 100.92, 23.5, '', 5.2, 5.3, 5.3, 5.2, 5.3, '', '', '', '', '', 5.9, 'Y', 14.4, ''),
        ('QUI', 'QUI-02N', '2024-09-06', '10B', 'A1', '10B-A', '12:48:20', '12:53:20', 26.2, 100.72, '', '', 5.2, 5.2, 5.1, 5.2, 5.2, '', '', '', '', '', 6.2, 'Y', 14.5, ''),
        ('QUI', 'QUI-02N', '2024-09-06', '10B', 'B2', '10B-B', '12:55:00', '13:00:00', 26.2, 100.72, '', '', 5.2, 5.2, 5.1, 5.2, 5.2, '', '', '', '', '', 6.2, 'Y', 14.5, ''),
        ('QUI', 'QUI-02N', '2024-09-06', '34', 'A1', '34-A', '13:12:20', '13:17:20', 25.8, 100.66, 23.6, '', 5.2, 5.1, 5.2, 5.2, 5.2, '', '', '', '', '', 8.4, 'Y', 14.5, ''),
        ('QUI', 'QUI-02N', '2024-09-06', '34', 'B2', '34-B', '13:19:30', '13:24:30', 25.8, 100.66, 23.6, '', 5.2, 5.1, 5.2, 5.2, 5.2, '', '', '', '', '', 8.4, 'Y', 14.5, ''),
        ('QUI', 'QUI-02N', '2024-09-06', '19B', 'A1', '19B-A', '13:35:30', '13:40:30', 27.5, 100.66, 23.6, '', 5.2, 5.3, 5.3, 5.2, 5, '', '', '', '', '', 12.3, 'Y', 14.5, ''),
        ('QUI', 'QUI-02N', '2024-09-06', '19B', 'B2', '19B-B', '13:42:00', '13:47:00', 27.5, 100.66, 23.6, '', 5.2, 5.3, 5.3, 5.2, 5, '', '', '', '', '', 12.3, 'Y', 14.5, ''),
        ('QUI', 'QUI-02N', '2024-09-06', '16B', 'A1', '16B-A', '14:00:00', '14:05:00', 25.9, 100.60, 24, '', 5.2, 5.1, 5, 5, 4.8, '', '', '', '', '', 13.3, 'Y', 14.45, ''),
        ('QUI', 'QUI-02N', '2024-09-06', '16B', 'B2', '16B-B', '14:06:50', '14:11:50', 25.9, 100.60, 24, '', 5.2, 5.1, 5, 5, 4.8, '', '', '', '', '', 13.3, 'Y', 14.45, ''),
        ('QUI', 'QUI-02N', '2024-09-06', '39', 'A1', '39-A', '14:20:30', '14:25:30', 25.6, 100.55, 23.7, '', 5.1, 5.2, 5.1, 5.2, 5.2, '', '', '', '', '', 6.2, 'Y', 14.3, ''),
        ('QUI', 'QUI-02N', '2024-09-06', '39', 'B2', '39-B', '14:25:40', '14:31:00', 25.6, 100.55, 23.7, '', 5.1, 5.2, 5.1, 5.2, 5.2, '', '', '', '', '', 6.2, 'Y', 14.3, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '41', 'A1', '41-A', '9:03:11', '9:08:41', 24.8, 100.02, 26.7, '', 4.7, 5.1, 4.8, 4.6, 4.6, 3, 5.5, 2.5, 4, '', -16.7, 'NO', '',''),
        ('QUI', 'QUI-02N', '2024-10-06', '41', 'B2', '41-B', '9:09:50', '9:14:50', 24.8, 100.02, 26.7, '', 4.7, 5.1, 4.8, 4.6, 4.6, 3, 5.5, 2.5, 4, '', -16.7, 'NO', '',''),
        ('QUI', 'QUI-02N', '2024-10-06', '19D', 'A1', '19D-A', '9:22:10', '9:27:18', 26.5, 100.73, 26.4, '', 4.8, 4.7, 4.7, 4.6, 4.5, '', '', '', '', '', 2.5, 'Y', 11, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '19D', 'B2', '19D-B', '9:28:30', '9:36:15', 26.5, 100.73, 26.4, '', 4.8, 4.7, 4.7, 4.6, 4.5, '', '', '', '', '', 2.5, 'Y', 11, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '22C', 'A1', '22C-A', '10:03:08', '10:08:08', 27.9, 100.73, 26.4, '', 5.1, 5, 5.1, 5.2, 5.1, '', '', '', '', '', 13.5, 'Y', 15, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '22C', 'B2', '22C-B', '10:09:35', '10:14:35', 27.9, 100.73, 26.4, '', 5.1, 5, 5.1, 5.2, 5.1, '', '', '', '', '', 13.5, 'Y', 15, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '42', 'A1', '42-A', '9:42:35', '9:48:35', 26.8, 100.69, 27, '', 5, 4.9, 4.8, 4.8, 4.7, '', '', '', '', '', 10.5, 'Y', 14, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '42', 'B2', '42-B', '9:52:07', '9:57:37', 26.8, 100.69, 27, '', 5, 4.9, 4.8, 4.8, 4.7, '', '', '', '', '', 10.5, 'Y', 14, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '19C', 'A1', '19C-A', '10:20:28', '10:25:50', 28.8, 100.65, 26.6, '', 5, 4.9, 4.8, 4.8, 4.7, '', '', '', '', '', 12.6, 'Y', 11, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '19C', 'B2', '19C-B', '10:30:00', '10:35:00', 28.8, 100.65, 26.6, '', 5, 4.9, 4.8, 4.8, 4.7, '', '', '', '', '', 12.6, 'Y', 13, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '22B', 'A1', '22B-A', '10:45:20', '10:50:27', 28.8, 100.65, 26.8, '', 5.1, 4.9, 4.9, 5, 4.9, '', '', '', '', '', 11.6, 'Y', 14, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '22B', 'B2', '22B-B', '10:49:42', '10:56:42', 28.8, 100.65, 26.8, '', 5.1, 4.9, 4.9, 5, 4.9, '', '', '', '', '', 11.6, 'Y', 14, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '25B', 'A1', '25B-A', '11:00:10', '11:05:30', 27.8, 100.63, 27.2, '', 5, 5, 5, 5, 4.9, '', '', '', '', '', 9.2, 'Y', 15, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '25B', 'B2', '25B-B', '11:06:50', '11:12:40', 27.8, 100.63, 27.2, '', 5, 5, 5, 5, 4.9, '', '', '', '', '', 9.2, 'Y', 15, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '25C', 'A1', '25C-A', '11:21:56', '11:27:00', 27.8, 100.63, 27.2, '', 4.9, 4.9, 4.8, 4.8, 4.7, '', '', '', '', '', 14.6, 'Y', 15, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '25C', 'B2', '25C-B', '11:29:50', '11:34:50', 27.8, 100.63, 27.2, '', 4.9, 4.9, 4.8, 4.8, 4.7, '', '', '', '', '', 14.6, 'Y', 15, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '40', 'A1', '40-A', '12:20:50', '12:25:50', 30.1, 100.74, 27.8, '', 4.1, 4.2, 4.7, 4.7, 4.6, 8.5, 8.5, 4.2, 4, '', -15.2, 'NO', 16, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '40', 'B2', '40-B', '12:28:00', '12:33:30', 30.1, 100.74, 27.8, '', 4.1, 4.2, 4.7, 4.7, 4.6, 8.5, 8.5, 4.2, 4, '', -15.2, 'NO', 16, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '25D', 'A1', '25D-A', '14:07:55', '14:12:40', 27.9, 100.62, 28, '', 5, 5, 5.1, 5.1, 5, '', '', '', '', '', 5.7, 'Y', 16, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '25D', 'B2', '25D-B', '14:15:00', '14:18:52', 27.9, 100.62, 28, '', 5, 5, 5.1, 5.1, 5, '', '', '', '', '', 5.7, 'Y', 16, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '39-R', 'C3', '39-R-C', '11:41:10', '11:46:35', 30.1, 100.74, '', '', '', '', '', '', '', '', '', '', '','', 6.2, 'Y', 14, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '16A-R', 'C3', '16A-R-C', '12:42:26', '12:48:40', 30.1, 100.74, '', '', '', '', '', '', '', 5.5, 4.5, 3.5, 4, '', 2.4, 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-10-06', '36-R', 'C3', '36-R-C', '12:56:00', '13:01:00', 30.1, 100.74, '', '', '', '', '', '', '', 6.5, 6, 7, 7, '', 3.5, 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-10-06', '13C-R', 'C3', '13C-R-C', '13:04:30', '13:09:30', 30.1, 100.74, '', '', '', '', '', '', '', 4.5, 4.5, 5.5, 4.7, '', -27.6, 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-10-06', '10B-R', 'C3', '10B-R-C', '13:14:30', '13:19:30', 30.1, 100.74, '', '', '', '', '', '', '', '', '', '', '','', 6.2, 'Y', 14.5, ''),
        ('QUI', 'QUI-02N', '2024-10-06', '7C-R', 'C3', '7C-R-C', '13:32:00', '13:38:10', 27.9, 100.62, '', '', '', '', '', '', '', 6.4, 8.2, 4.8, 7.7, '', -5, 'NO', '', ''),
        ('QUI', 'QUI-02N', '2024-10-06', 'N2-R', 'C3', 'N2-R-C', '13:41:54', '13:47:08', 27.9, 100.62, '', '', '', '', '', '', '', 3.5, 2.5, 5, 5, '', 6.5, 'NO', '', '')

        '''
)


# Commit and close the connection
conn.commit()
conn.close()


def search_parcela_site(conn, Parcela_Site):
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM soil_data WHERE Parcela_Site = ?", (Parcela_Site,))
    results = cursor.fetchall()
    cursor.close()
    return results

def search_site(conn, Site):
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM soil_data WHERE Site = ?", (Site,))
    results = cursor.fetchall()
    cursor.close()
    return results

def search_altura_cam_flotante(conn, Altura_de_la_camara_flotante):
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM soil_data WHERE Altura_de_la_camara_flotante = ?", (Altura_de_la_camara_flotante,))
    results = cursor.fetchall()
    cursor.close()
    return results

def search_by_month(conn, month):
    cursor = conn.cursor()
    query = "SELECT * FROM soil_data WHERE strftime('%m', fecha) = ?"
    cursor.execute(query, (month,))
    results = cursor.fetchall()
    cursor.close()
    return results

def search_by_year(conn, year):
    cursor = conn.cursor()
    query = "SELECT * FROM soil_data WHERE strftime('%Y', fecha) = ?"
    cursor.execute(query, (year,))
    results = cursor.fetchall()
    cursor.close()
    return results

def search_by_month_and_year(conn, month, year):
    cursor = conn.cursor()
    query = "SELECT * FROM soil_data WHERE strftime('%m', fecha) = ? AND strftime('%Y', fecha) = ?"
    cursor.execute(query, (month, year))
    results = cursor.fetchall()
    cursor.close()
    return results

def format_month(month):
    """Ensure the month is in MM format."""
    return month.zfill(2) if len(month) == 1 else month

def format_year(year):
    """Ensure the year is in YYYY format."""
    return year.zfill(4) if len(year) < 4 else year

def search_mini_plot(conn, Miniplot):
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM soil_data WHERE Miniplot = ?", (Miniplot,))
    results = cursor.fetchall()
    cursor.close()
    return results

def format_mini_plot(Miniplot):
    """Ensure the Miniplot is in the correct format (if necessary)."""
    return Miniplot.strip()  # Remove any leading/trailing spaces

def main_menu():
    conn = sqlite3.connect("/Users/sanskarsrivastava/Desktop/CSE/Database-job/soil_data.db")
    
    while True:
        print("\nMenu:")
        print("1. Search by Parcela_Site")
        print("2. Search by Site")
        print("3. Search by Altura_de_la_camara_flotante")
        print("4. Search by Month")
        print("5. Search by Year")
        print("6. Search by Month and Year")
        print("7. Search by Mini-Plot")
        print("8. Exit")

        choice = input("Select an option (1-8): ")

        if choice == '1':
            parcela_site_to_search = input("Enter the Parcela_Site to search: ")
            results = search_parcela_site(conn, parcela_site_to_search)
            if results:
                print("Search Results:")
                for row in results:
                    print(row)
            else:
                print("No results found for the given Parcela_Site.")

        elif choice == '2':
            site_to_search = input("Enter the Site to search: ")
            results = search_site(conn, site_to_search)
            if results:
                print("Search Results:")
                for row in results:
                    print(row)
            else:
                print("No results found for the given Site.")

        elif choice == '3':
            altura_to_search = input("Enter the Altura_de_la_camara_flotante to search: ")
            print(f"Searching for Altura_de_la_camara_flotante: {altura_to_search}")  # Debug print
            results = search_altura_cam_flotante(conn, altura_to_search)
            if results:
                print("Search Results:")
                for row in results:
                    print(row)
            else:
                print("No results found for the given Altura_de_la_camara_flotante.")

        elif choice == '4':
            month_input = input("Enter the month (MM) to search: ")
            month_input = format_month(month_input)  # Format the month
            results = search_by_month(conn, month_input)
            if results:
                print("Search Results:")
                for row in results:
                    print(row)
            else:
                print("No results found for the given month.")

        elif choice == '5':
            year_input = input("Enter the year (YYYY) to search: ")
            year_input = format_year(year_input)  # Format the year
            results = search_by_year(conn, year_input)
            if results:
                print("Search Results:")
                for row in results:
                    print(row)
            else:
                print("No results found for the given year.")

        elif choice == '6':
            month_input = input("Enter the month (MM) to search: ")
            month_input = format_month(month_input)  # Format the month
            year_input = input("Enter the year (YYYY) to search: ")
            year_input = format_year(year_input)  # Format the year
            results = search_by_month_and_year(conn, month_input, year_input)
            if results:
                print("Search Results:")
                for row in results:
                    print(row)
            else:
                print("No results found for the given month and year.")

        elif choice == '7':
            mini_plot_to_search = input("Enter the Mini_Plot to search: ")
            mini_plot_to_search = format_mini_plot(mini_plot_to_search)  # Format the Mini_Plot
            results = search_mini_plot(conn, mini_plot_to_search)
            if results:
                print("Search Results:")
                for row in results:
                    print(row)
            else:
                print("No results found for the given Mini_Plot.")

        elif choice == '8':
            print("Exiting the program.")
            break

        else:
            print("Invalid option. Please try again.")

    conn.close()

if __name__ == "__main__":
    main_menu()
